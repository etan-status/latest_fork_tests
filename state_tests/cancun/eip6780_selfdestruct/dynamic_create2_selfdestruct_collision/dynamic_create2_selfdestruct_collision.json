{
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Paris-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_True-create2_dest_already_in_state_True]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327": {
                "nonce": "0x01",
                "balance": "0x01",
                "code": "0x6103e8ff",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Paris": [
                {
                    "hash": "0xa178ca3bcc6ae6c235505c80a4970126973deedda3233de6e17459b3ce0c849b",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0x64b3fda113ca81fd25743c56cc651a4158f1a38ad60bf89b1ad2f7a91f0647bf",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Paris-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_True-create2_dest_already_in_state_False]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Paris": [
                {
                    "hash": "0xc4c2e73447a6ff822b27903a914878887dd4ae6bd13f870eaba22da05e554f71",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0xfa37d2025b86e736be82af3160e1b115fc77857cea224547ae392f244554671f",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Paris-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_False-create2_dest_already_in_state_True]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127106000620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327": {
                "nonce": "0x01",
                "balance": "0x01",
                "code": "0x6103e8ff",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Paris": [
                {
                    "hash": "0x93b96f3c9b71966969cbb483bb583d152c909fe9576b06c7e33f7ff1a43b5910",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0x5647bd1c5ac2e382a5cf3070c99236b7a3710abc65a9fe37816f76f41f31e43b",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Paris-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_False-create2_dest_already_in_state_False]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127106000620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Paris": [
                {
                    "hash": "0x7e5014bd4f655061cc7d01683f9ac4193f6c87437e7ba2772453e23769c976b1",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0x7c45f5cc5deee93508df484ab0b279624e1f0995062bcf9711d3f24407124eb7",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Paris-state_test-call_create2_contract_in_between_False-call_create2_contract_at_the_end_True-create2_dest_already_in_state_True]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060646000620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327": {
                "nonce": "0x01",
                "balance": "0x01",
                "code": "0x6103e8ff",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Paris": [
                {
                    "hash": "0xd268d2365c092332344caed71ed9ba7854811b8ae01f4459b018942df3744d5f",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0xb117bafda551909498384bc1a3effb11892fe9008e5b182d69179aca8f93c061",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Paris-state_test-call_create2_contract_in_between_False-call_create2_contract_at_the_end_True-create2_dest_already_in_state_False]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060646000620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Paris": [
                {
                    "hash": "0xac4063b51ea91d8e1db5fac74d9095bb9773b5ce40fb2cf4e570f1a2e0e1bcd0",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0x0a7b04790bbf90dc3ba181bcb613e65a92936f915c82a451c35ff7e42e93cc68",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Shanghai-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_True-create2_dest_already_in_state_True]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327": {
                "nonce": "0x01",
                "balance": "0x01",
                "code": "0x6103e8ff",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Shanghai": [
                {
                    "hash": "0xa178ca3bcc6ae6c235505c80a4970126973deedda3233de6e17459b3ce0c849b",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0xd7ed3bb3f5c12ae164dc42263a4653fcc285ad48bd2989a2bf711524989f8e23",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Shanghai-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_True-create2_dest_already_in_state_False]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Shanghai": [
                {
                    "hash": "0x39e44f2b0bb4ddeda403047aad46851174935e305d68f365481e8b4b5f3af689",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0x0affb37fff77ff5cbb715bdeede1ccba3ab7b61021a59ce4da0c830b009dd800",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Shanghai-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_False-create2_dest_already_in_state_True]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127106000620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327": {
                "nonce": "0x01",
                "balance": "0x01",
                "code": "0x6103e8ff",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Shanghai": [
                {
                    "hash": "0x93b96f3c9b71966969cbb483bb583d152c909fe9576b06c7e33f7ff1a43b5910",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0xf4b1e174ccf8595e2656ac3baaa2cf33ea770707c63e0893fdb15b44e9105d13",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Shanghai-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_False-create2_dest_already_in_state_False]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127106000620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Shanghai": [
                {
                    "hash": "0x00dd4e12b073faf90e9bfc450d4bcfebf6d869ef2e120b89df8654b5d8e6e362",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0x4924d9599df779242787702019202d48f40e44b1ea2a2171a4cacc283c4d270e",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Shanghai-state_test-call_create2_contract_in_between_False-call_create2_contract_at_the_end_True-create2_dest_already_in_state_True]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060646000620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327": {
                "nonce": "0x01",
                "balance": "0x01",
                "code": "0x6103e8ff",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Shanghai": [
                {
                    "hash": "0xd268d2365c092332344caed71ed9ba7854811b8ae01f4459b018942df3744d5f",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0x1f07438d4113c95b8d8f84194bcd9dde0d556fbc03b74d382fe55a67ac948e12",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Shanghai-state_test-call_create2_contract_in_between_False-call_create2_contract_at_the_end_True-create2_dest_already_in_state_False]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060646000620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Shanghai": [
                {
                    "hash": "0x85179a1cc8a3ce0a4a81ba2e51180c701a3407c8518c72617cca1e09b2b4eac2",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0xb41fa16f0a08722144bc0abf350a8934c48b1fb8d0b5fa0b5cef95ab2ca3eba9",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Cancun-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_True-create2_dest_already_in_state_True]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07",
            "currentExcessBlobGas": "0x00"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327": {
                "nonce": "0x01",
                "balance": "0x01",
                "code": "0x6103e8ff",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Cancun": [
                {
                    "hash": "0x85777b9988f2a223866b1bf9f6e6ff2cd18817253d2707fa5243266c25fdfcc1",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0xc25b492f161892f3789c442c821691e7e3935836f43bc31d702edecabbcdb5c4",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Cancun-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_True-create2_dest_already_in_state_False]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07",
            "currentExcessBlobGas": "0x00"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Cancun": [
                {
                    "hash": "0x39e44f2b0bb4ddeda403047aad46851174935e305d68f365481e8b4b5f3af689",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0x9c0e8267d1fac6570d6a8603b48efc1af16b70a5066ac4ac69a1f7a82ecb1b38",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Cancun-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_False-create2_dest_already_in_state_True]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07",
            "currentExcessBlobGas": "0x00"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127106000620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327": {
                "nonce": "0x01",
                "balance": "0x01",
                "code": "0x6103e8ff",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Cancun": [
                {
                    "hash": "0x2bae7a77dff5888ad7a49b9c609bf4904de6ae975751986ea9cf95427fdf0a3c",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0x44c95d81b09ae141f4f533c0da46c66acbb4a6b2d142096fdb384b14f8ce0e4c",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Cancun-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_False-create2_dest_already_in_state_False]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07",
            "currentExcessBlobGas": "0x00"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127106000620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Cancun": [
                {
                    "hash": "0x00dd4e12b073faf90e9bfc450d4bcfebf6d869ef2e120b89df8654b5d8e6e362",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0xd2a816d8310bfb5cdc5b1fdee06d24192a0e31617716e569395581b6478811aa",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Cancun-state_test-call_create2_contract_in_between_False-call_create2_contract_at_the_end_True-create2_dest_already_in_state_True]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07",
            "currentExcessBlobGas": "0x00"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060646000620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327": {
                "nonce": "0x01",
                "balance": "0x01",
                "code": "0x6103e8ff",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Cancun": [
                {
                    "hash": "0x1871612c1ac9032ce6ece34af51575fbf2e4a6f41e70dd49d2f417c8e202e2b0",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0x70ec71a39e377987c9264aa5bd395728addec96215dc09757df8460a9aab1a16",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Cancun-state_test-call_create2_contract_in_between_False-call_create2_contract_at_the_end_True-create2_dest_already_in_state_False]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07",
            "currentExcessBlobGas": "0x00"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060646000620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Cancun": [
                {
                    "hash": "0x85179a1cc8a3ce0a4a81ba2e51180c701a3407c8518c72617cca1e09b2b4eac2",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0x584743de70c9e528e65da45d4196e817b827df3fea5bbd92ca20bd5b428267dd",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Prague-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_True-create2_dest_already_in_state_True]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07",
            "currentExcessBlobGas": "0x00"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327": {
                "nonce": "0x01",
                "balance": "0x01",
                "code": "0x6103e8ff",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Prague": [
                {
                    "hash": "0x85777b9988f2a223866b1bf9f6e6ff2cd18817253d2707fa5243266c25fdfcc1",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0xbcb1957186a6b1982737481fa6fef0895c0aed738dd8d5915ca3b4b8430df2e2",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Prague-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_True-create2_dest_already_in_state_False]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07",
            "currentExcessBlobGas": "0x00"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Prague": [
                {
                    "hash": "0x39e44f2b0bb4ddeda403047aad46851174935e305d68f365481e8b4b5f3af689",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0xaae06d5c917aadf7cd639abd36cef7c1d250a7c04a20293763969e95321d9a4c",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Prague-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_False-create2_dest_already_in_state_True]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07",
            "currentExcessBlobGas": "0x00"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127106000620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327": {
                "nonce": "0x01",
                "balance": "0x01",
                "code": "0x6103e8ff",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Prague": [
                {
                    "hash": "0x2bae7a77dff5888ad7a49b9c609bf4904de6ae975751986ea9cf95427fdf0a3c",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0xe6105d519a9a6774871b804a559c11de4826adf3f9042df91b806cab3563e921",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Prague-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_False-create2_dest_already_in_state_False]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07",
            "currentExcessBlobGas": "0x00"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127106000620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Prague": [
                {
                    "hash": "0x00dd4e12b073faf90e9bfc450d4bcfebf6d869ef2e120b89df8654b5d8e6e362",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0x4f800972abec1657280648f7f749ff5b09a6c89eed6b6d96cbbe64057121d92d",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Prague-state_test-call_create2_contract_in_between_False-call_create2_contract_at_the_end_True-create2_dest_already_in_state_True]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07",
            "currentExcessBlobGas": "0x00"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060646000620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327": {
                "nonce": "0x01",
                "balance": "0x01",
                "code": "0x6103e8ff",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Prague": [
                {
                    "hash": "0x1871612c1ac9032ce6ece34af51575fbf2e4a6f41e70dd49d2f417c8e202e2b0",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0xcab487ce91aadc2447450a29d133146d71525e73d710de4acff2a111649a7fe6",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    },
    "tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Prague-state_test-call_create2_contract_in_between_False-call_create2_contract_at_the_end_True-create2_dest_already_in_state_False]": {
        "env": {
            "currentCoinbase": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentGasLimit": "0xff112233445566",
            "currentNumber": "0x01",
            "currentTimestamp": "0x03e8",
            "currentRandom": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentDifficulty": "0x00",
            "currentBaseFee": "0x07",
            "currentExcessBlobGas": "0x00"
        },
        "pre": {
            "0x0000000000000000000000000000000000000600": {
                "nonce": "0x00",
                "balance": "0x05f5e100",
                "code": "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060646000620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "storage": {
                    "0x02": "0xff",
                    "0x03": "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601": {
                "nonce": "0x00",
                "balance": "0x00",
                "code": "0x366000600037600136600047f560005260206000f3",
                "storage": {}
            },
            "0x0000000000000000000000000000000000000512": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x6001600155",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            }
        },
        "transaction": {
            "nonce": "0x00",
            "gasPrice": "0x0a",
            "gasLimit": [
                "0x4c4b40"
            ],
            "to": "0x0000000000000000000000000000000000000600",
            "value": [
                "0x00"
            ],
            "data": [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "sender": "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "secretKey": "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
        },
        "post": {
            "Prague": [
                {
                    "hash": "0x85179a1cc8a3ce0a4a81ba2e51180c701a3407c8518c72617cca1e09b2b4eac2",
                    "logs": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes": "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067",
                    "indexes": {
                        "data": 0,
                        "gas": 0,
                        "value": 0
                    }
                }
            ]
        },
        "_info": {
            "hash": "0x684ccb471b2e9df1594d80a8db5a368b63959ade4723688eb1fd2d89153dd819",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "evm version 1.14.8-unstable-0d177456-20240723",
            "description": "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "url": "https://github.com/ethereum/execution-spec-tests/tree/v3.0.0/tests/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py#L43",
            "reference-spec": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6780.md",
            "reference-spec-version": "2f8299df31bb8173618901a03a8366a3183479b0"
        }
    }
}